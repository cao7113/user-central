#====原有项目学习/分析
#==用户认证部分
devise和omniauth是分开的
可以考虑用devise自带的，更好的融合起来
看到devise有内建的omniauth支持，有空将现在的方式迁移过去

#==sso service
authentication--用户通过第三方认证生成的用户关联
access_grant--用户授权的客户应用
  里面的code是何含义？？？
一个user可以对应多个authentications和access_grants
users表中的authentication_token--access_grants表的access_token

client--客户应用的注册信息

==omniauth的一些改进
在生成的user_info hash中加入email的key，使用的具体认证策略（如tqq）可以用initializer覆盖

auth--处理sso的server端的服务请求
authentications--处理omniauth模型中第三方应用中的请求

#改进access_grant模型
现在采取的是两天过期，然后请求时检查/清除过期数据的方法，更合理的方法应该是：
过期时间是按照用户/客户应用级别可配置的
过期数据可以重复利用更新，并记录跟踪各个应用用户登录情况分布

#==深入调查多应用结合模型


